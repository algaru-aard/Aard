<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on Saturday, May 21, 2022, 10:07 PM -->
<!-- MuClient version 5.07-pre -->

<!-- Plugin "AlgaruStudyHelper" generated by Plugin Wizard -->

<muclient>
<plugin
   name="AlgaruStudyHelper"
   author="Algaru"
   id="ad5f191b2f1e098012a78a89"
   language="Lua"
   purpose="Supplement study output with more info"
   date_written="2022-05-21 22:05:50"
   requires="5.07"
   version="1.0"
   >
<description trim="y">

<![CDATA[
Use this plugin to augment "study" output with info showing each character's health range.

Example:

[ 100% ] A giant tortoise is in perfect health.
[95-99%] You have a few minor scratches.
[45-54%] A tentacle-faced demon has quite a few wounds.

Usage: 
    study <optional target>     - standard study
    pstudy <optional target>    - filter only for players
    mstudy <optional target>    - filter only for mobs
    study_help                  - print this help
    study_test                  - display sample output
    
Caveats:
    * pstudy and mstudy will probably not work as expected in safe rooms
    * pstudy and mstudy combine study output with "consider" so there's a bit of lag
        
]]> 
</description>

</plugin>

<aliases>
  <alias
   name="study"
   match="^(?<studymode>p|m|)study(?<studytarget>$|[ ]+(.*)$)"
   regexp="y"
   enabled="y"
   sequence="100"
   script="start_study"
  >
  </alias>
  <alias
   name="study_test"
   match="^study_test$"
   regexp="y"
   enabled="y"
   sequence="100"
   script="test_colors"
  >
  </alias>
  <alias
   name="studyhelp"
   match="^(study_help|studyhelp)$"
   regexp="y"
   enabled="y"
   sequence="100"
   script="OnHelp"
  >
  </alias>
</aliases>

<triggers>
  <trigger
   enabled="y"
   match="^stop_study$"
   regexp="y"
   name="stop_study"
   send_to="10"
   sequence="100"
   omit_from_output="y"
   keep_evaluating = "y"
   script="stop_study"
  >
  </trigger>
  <trigger
   enabled="n"
   match="^(?<character>.*) (?<verb>(is|are|has|have|needs|need)) (?<damage_desc>in perfect health|a few minor scratches|showing a few grazes|bleeding lightly|some small wounds and bruises|showing a few battle scars|quite a few wounds|some big nasty wounds and scratches|some very nasty wounds|a hospital|gravely injured|at death's door)\.$"
   script="print_one_study_line"
   omit_from_output="y"
   keep_evaluating = "y"
   name="study_health_trigger"
   sequence="100"
   regexp="y"
   group="study_health_triggers"
  />

<!-- For grabbing mob names --> 
  <!-- Name is at the end of the string --> 
  <trigger
   enabled="n"
   match="(You would be completely annihilated by |.+ would smite you for killing |.* would not approve of you killing )(?<mob>.*)[!\.]"
   script="build_mob_list"
   omit_from_output="y"
   keep_evaluating = "y"
   name="build_mob_list_1"
   sequence="100"
   regexp="y"
   group="mob_list_group"
  /> 

  <!-- Name is in the middle of the string --> 
  <trigger
   enabled="n"
   match="(You would stomp |No Problem! |Best run away from |Challenging )(?<mob>.*)[ ]*( into the ground| is weak compared to you| while you can| would be either very brave or very stupid)[!\.]"
   script="build_mob_list"
   omit_from_output="y"
   keep_evaluating = "y"
   name="build_mob_list_2"
   sequence="100"
   regexp="y"
   group="mob_list_group"
  /> 


  <!-- Name is at the front of the string --> 
  <trigger
   enabled="n"
   match="(?<mob>.*)( would be easy, but is it even worth the work out\?| looks a little worried about the idea\.| should be a fair fight!| snickers nervously\.| chuckles at the thought of you fighting .*\.| would crush you like a bug!| would dance on your grave!| says 'BEGONE FROM MY SIGHT unworthy!'| has divine protection\.| has already been challenged\.)$"
   script="build_mob_list"
   omit_from_output="y"
   keep_evaluating = "y"
   name="build_mob_list_3"
   sequence="100"
   regexp="y"
   group="mob_list_group"
  /> 
  </triggers>




<script>
<![CDATA[

mob_list = {}
study_mode = ''

damage_table = {
    ["in perfect health"]                    = {["color"] = "darkgreen",     ["range"] = " 100% "},
    ["a few minor scratches"]                = {["color"] = "green",         ["range"] = "95-99%"},
    ["showing a few grazes"]                 = {["color"] = "limegreen",     ["range"] = "85-94%"},
    ["bleeding lightly"]                     = {["color"] = "lime",          ["range"] = "75-84%"},
    ["some small wounds and bruises"]        = {["color"] = "lawngreen",     ["range"] = "65-74%"},
    ["showing a few battle scars"]           = {["color"] = "greenyellow",   ["range"] = "55-64%"},
    ["quite a few wounds"]                   = {["color"] = "yellow",        ["range"] = "45-54%"},
    ["some big nasty wounds and scratches"]  = {["color"] = "orange",        ["range"] = "35-44%"},
    ["some very nasty wounds"]               = {["color"] = "darkorange",    ["range"] = "25-34%"},
    ["a hospital"]                           = {["color"] = "orangered",     ["range"] = "15-24%"},
    ["gravely injured"]                      = {["color"] = "firebrick",     ["range"] = " 5-14%"},
    ["at death's door"]                      = {["color"] = "darkred",       ["range"] = " 0-4% "}    
}

damage_order = {
    "in perfect health", 
    "a few minor scratches", 
    "showing a few grazes", 
    "bleeding lightly", 
    "some small wounds and bruises", 
    "showing a few battle scars", 
    "quite a few wounds", 
    "some big nasty wounds and scratches", 
    "some very nasty wounds", 
    "a hospital", 
    "gravely injured", 
    "at death's door"
}

default_color = "lightgray"
default_range = "????"

function start_study(name, line, args)
    study_mode = args.studymode
    if (study_mode == 'p' or study_mode == 'm')
    then
        EnableTriggerGroup("mob_list_group", true)
        Send("consider all")
    end
    
    mob_list = {}
    Send("study " .. args.studytarget)
    SendNoEcho("echo stop_study")
    EnableTrigger("study_health_trigger", true)  
end

function stop_study()
    EnableTrigger("study_health_trigger", false) 
    EnableTriggerGroup("mob_list_group", false)
end

function print_one_study_line(name, line, args)
    health_string = args.damage_desc
    color = damage_table[args.damage_desc]["color"]
    range = damage_table[args.damage_desc]["range"]
    local mob_or_player = is_mob(args.character) 
  
    if (study_mode == '' or
        (study_mode == 'm' and mob_or_player == true) or
        (study_mode == 'p' and mob_or_player == false))
    then
        ColourNote(default_color, "", "[", color, "", range, default_color, "", "] ", default_color, "", line)
    end
end

function test_colors ()
    for _, damage in ipairs(damage_order) do
        color = damage_table[damage]["color"]
        range = damage_table[damage]["range"]
        ColourNote(default_color, "", "[", color, "", range, default_color, "", "] " .. damage)
    end
end

function build_mob_list(name, line, args)
    -- Note(line)
    -- Note('"' .. args.mob .. '"')
    mob = strip_mob_flags(args.mob)
    -- Note("Identified " .. mob .. " as a mob")
    table.insert(mob_list, mob)
end

function strip_mob_flags(mob)
    local cleaned_mob = mob
    -- Yeah, I know, it's ugly, wanna fight about it? 
    local replacements = {
        ["%(Animated%)%s*"] = "",       ["%(A%)%s*"] = "",
        ["%(Angry%)%s*"] = "",          ["%(Charmed%)%s*"] = "",
        ["%(C%)%s*"] = "",              ["%(Diseased%)%s*"] = "",
        ["%(D%)%s*"] = "",              ["%(Golden Aura%)%s*"] = "",
        ["%(F%)%s*"] = "",              ["%(Flying%)%s*"] = "",
        ["%(G%)%s*"] = "",              ["%(Hidden%)%s*"] = "",
        ["%(H%)%s*"] = "",              ["%(Invis%)%s*"] = "",
        ["%(I%)%s*"] = "",              ["%(Marked%)%s*"] = "",
        ["%(X%)%s*"] = "",              ["%(OPK%)%s*"] = "",
        ["%(Player%)%s*"] = "",         ["%(P%)%s*"] = "",
        ["%(Red Aura%)%s*"] = "",       ["%(R%)%s*"] = "",
        ["%(Stealth%)%s*"] = "",        ["%(S%)%s*"] = "",
        ["%(Translucent%)%s*"] = "",    ["%(T%)%s*"] = "",
        ["%(Undead%)%s*"] = "",         ["%(U%)%s*"] = "",
        ["%(White Aura%)%s*"] = "",     ["%(W%)%s*"] = "",
        ["%(Wounded%)%s*"] = "",        ["%(Aimed%)%s*"] = ""
    }
    
    for aura in pairs(replacements) do 
        cleaned_mob = string.gsub((cleaned_mob or mob), aura,"") 
    end
    
    return cleaned_mob
end

function is_mob (target)
    for index, value in ipairs(mob_list) do
        if value == target then
            return true
        end
    end

    return false
end

function OnHelp ()
  ColourNote ("magenta", "", world.GetPluginInfo (world.GetPluginID (), 3))
  ColourNote ("magenta", "", "")
  ColourNote ("magenta", "", "Sample output with color:")
  test_colors()
end

function OnPluginEnable()
    mob_list = {}
    study_mode = ''
    OnHelp()
end

function OnPluginInstall()
    mob_list = {}
    study_mode = ''
    OnHelp()
end


]]>
</script>

</muclient>
